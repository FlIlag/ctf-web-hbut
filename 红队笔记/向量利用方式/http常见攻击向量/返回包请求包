一般用bp测试

  Cookie、LocalStorage、SessionStorage中储存了明文密码或者其他加密密码或hash

http头泄露服务器版本信息

返回包暴露内网ip

对于登录次数限制，可以通过加入伪造ip尝试绕过，或者查看是否是前端限制，直接删除js代码绕过或者直接发包,或者更改cookie和seesion和csrf令牌

验证码穷举，验证码4-6位，且生效时间长

重要返回包可伪造，弱token设计：密码重置返回包时的验证返回包有效的参数token可预测，有明显规律，只有简单的md5或base64加密

session登录前后不变：漏洞描述：在用户进入登录页面，但还未登录时，就已经产生了一个 session，用户输入信息，登录以后，session 的 id 不会改变，也就是说没有建立新 session，
原来的 session 也没有被销毁）。攻击者事先访问系统并建立一个会话，诱使受害者使用此会话登录系统，然后攻击者再使用该会话访问系统即可登录受害者的账户。会话固定攻击的原理及流程如下图所示：
Bob（攻击者）
匿名访问www.buybook.com。
服务器与 Bob 建立了一个会话，比如 sessionid 为 1234567 。
Bob 构造了一个 URL：http://www.buybook.com/login.jsp?sessionid=1234567，发给了受害者 Alice。
Alice（受害者）
4. Alice 直接打开此链接，输入自己的用户名和密码登录系统。
5. 此时 Bob 再次访问http://www.buybook.com/viewprofile.jsp?sessionid=1234567，即可进入 Alice 的账户。


密码重置链接可预测：密码重置链接有一定规律，可人为预测，修改任意用户密码，比如：用户名加时间戳的md5值

密码任意重置：在对密码进行修改时，服务器可能会根据用户提交的用户账号参数来判断要修改哪个用户的密码，如果服务端没有对用户提交的数据进行严格校验，则可能引发任意用户密码修改漏洞。
(a) 方法一：
设置代理抓取修改密码过程数据包，在找回密码页面输入A账号，点击请求发送验证码。查看发送验证码数据包是否包含phone、email等参数，
如若存在，尝试修改为测试者的手机号码或者邮箱。(如果此步骤不存在phone、email等用户账号相关参数，参照方法二进行测试。)
查看短信或者邮箱是否收到验证码或者重置密码链接，使用收到的验证码或者访问重置密码链接，测试是否能进入密码重置页面。
如若进入密码重置页面，输入新密码测试是否能成功修改密码。
(b) 方法二：
设置代理抓取修改密码过程数据包，在找回密码页面输入A账号，点击请求发送短信验证码或者重置密码链接。
使用接收到的验证码或者重置密码链接进入密码修改页面，输入新密码提交并抓取数据包。查看数据包中是否存在用户账号相关参数，
如果存在，尝试将账号参数修改为其他用户的账号。 

短信 / 邮件验证码关联性验证缺失：输入用户名及使用手机号 A / 邮箱 A 获取验证码，修改为接收验证码的手机号 B / 邮箱 B 的号码，提交 B 收到的验证码到网站进行验证，
验证成功并进入手机号 / 邮箱 A 的功能页面，则说明存在漏洞。
手机号码 A / 邮箱 A 发送短信验证码的请求，在注册账户、修改密码等功能点将手机号码改为 B / 邮箱 B 的手机号码，测试是否可对手机号码 B / 邮箱 B 执行注册账户、修改密码等功能

负值反冲：漏洞描述：应用程序未校验订单数据的取值范围，交易存在负值反冲。测试方法：提交订单时拦截请求，修改订单参数为负数，如商品单价、数量、总价等。
风险分析：通过篡改订单参数，使得订单金额为负值，在使用余额支付时余额反而增加。





