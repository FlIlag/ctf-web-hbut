Nmap的常用命令及详细解释，涵盖基础扫描、端口指定、服务/系统检测、扫描类型及结果输出等核心功能：

常用：
nmap -sn 10.10.10.0/24
nmap -sT --min-rate 10000 -p-  -oA nmapscan/ports
nmap -sT -sV -sC -O -p<端口号> 10.10.10.21 -oA nmapscan/detail
nmap -sU --top-ports 20 10.10.10.21 -oA nmapscan/udp
nmap --script=vuln -p<端口号> 10.10.10.21 -oA nmapscan/vuln


 一、基础扫描命令
 1. 默认扫描（SYN 半开扫描）

nmap <目标IP/域名>
# 示例：nmap 192.168.1.1 或 nmap example.com

- 作用：默认使用 `-sS`（半开扫描），检测开放端口，快速且隐蔽（需管理员权限）。
- 特点：发送 SYN 包，若收到 SYN/ACK 则标记端口开放，随后发送 RST 断开连接，不完成三次握手，对目标影响小。


 二、端口扫描选项
 2. 全连接扫描（适合非管理员）

nmap -sT <目标>

- 作用：完成 TCP 三次握手（connect() 系统调用），准确性高，无需管理员权限，但易被日志记录。

 3. UDP 端口扫描

nmap -sU <目标>

- 作用：扫描 UDP 端口，需注意 UDP 无连接特性，可能返回 “open|filtered”，耗时较长，需增加重试（`--max-retries 3`）。

 4. 指定端口范围

nmap -p <端口列表> <目标>
# 示例：
nmap -p 80,443,8080 目标   # 扫描指定端口
nmap -p 1-1000 目标        # 扫描 1-1000 端口
nmap -p- 目标              # 扫描所有端口（1-65535）


 5. 仅扫描开放端口（快速扫描）

nmap -T4 -F <目标>

- -T4：设置扫描速度（0-5，4 为快速，5 可能触发防御机制）。
- -F：扫描默认的 100 个常用端口，适合快速探测。


 三、服务与系统检测
 6. 检测服务版本

nmap -sV <目标>

- 作用：识别端口上运行的服务及版本（如 Apache 2.4.57、MySQL 8.0.32）。

 7. 操作系统检测

nmap -O <目标>

- 作用：分析响应数据包指纹，判断目标操作系统（如 Windows 10、Ubuntu 22.04）。

 8. 综合扫描（全开模式）

nmap -A <目标>

- 等价于：`-sS -sV -O --script=default --traceroute`
- 功能：包含端口扫描、服务版本检测、操作系统检测、脚本扫描（漏洞/信息收集）及路由跟踪。


 四、高级扫描类型（隐蔽/绕过防御）
 9. 秘密扫描（FIN/Xmas/NULL 扫描）

# FIN 扫描（适用于 Unix 系统）
nmap -sF <目标>
# Xmas 扫描（设置 FIN、PSH、URG 标志位）
nmap -sX <目标>
# NULL 扫描（清除所有标志位）
nmap -sN <目标>

- 作用：通过设置异常 TCP 标志位，绕过简单的状态检测防火墙（部分系统可能返回 RST 包）。

 10. 分片扫描

nmap -f <目标> 或 nmap --mtu <数值> <目标>（如 --mtu 16）

- 作用：将数据包分成小片段，绕过部分数据包过滤规则（需管理员权限）。

 11. 僵尸扫描（伪造源IP）

nmap -sI <僵尸IP> <目标>

- 作用：利用僵尸主机作为跳板，隐藏真实扫描源，技术复杂，需目标网络支持。


 五、目标与结果输出
 12. 从文件导入扫描目标

nmap -iL <文件名>
# 示例：nmap -iL targets.txt

- 作用：批量扫描文件中列出的 IP 或域名（每行一个目标）。

 13. 输出结果到文件

# 普通文本格式
nmap -oN <文件名> <目标>
# XML 格式（适合工具解析）
nmap -oX <文件名> <目标>
# 同时输出多种格式
nmap -oA <前缀名> <目标>  # 生成 .nmap、.xml、.gnmap 三种格式


 14. 列表扫描（仅显示目标，不实际扫描）

nmap -sL <目标>

- 作用：验证目标是否存在或格式正确，不发送任何探测包。


 六、脚本扫描（Nmap Scripting Engine, NSE）
 15. 运行指定脚本

nmap --script <脚本名或类别> <目标>
# 示例：
nmap --script vulners <目标>       # 检测已知漏洞
nmap --script http-enum <目标>     # 枚举 HTTP 目录
nmap --script=default <目标>       # 运行默认脚本（-A 已包含）

- 常用脚本类别：`vuln`（漏洞）、`safe`（安全脚本）、`auth`（认证检测）、`discovery`（服务发现）。


 七、其他实用选项
 16. 跳过主机发现（直接扫描端口）

nmap -Pn <目标>

- 作用：假设目标主机在线，绕过 ping 检测（适合防火墙禁 ping 的场景）。

 17. 设置超时与重试

nmap --max-retries 2 --min-timeout 500ms <目标>

- 优化扫描速度与稳定性，避免因网络延迟导致误判。

 18. 版本与帮助

nmap -v  # 显示详细扫描过程（-vv 更详细）
nmap --help  # 查看完整帮助文档



 使用注意事项
1. 合法授权：仅扫描自己拥有或获得明确授权的网络，避免法律风险。
2. 管理员权限：部分扫描（如 `-sS`、`-f`）需管理员/root 权限。
3. 隐蔽性：高速扫描（`-T4/T5`）或全端口扫描易触发入侵检测系统（IDS），建议根据场景调整。

通过组合上述选项，可针对不同需求（如漏洞检测、资产发现、渗透测试）灵活配置扫描策略。
